print("Hello Swift")
import Foundation
/* 
1                1
2        2                3
3    4        5        6        7

 [1],[2,3],[4,5,6,7]

Node
int val
Node left
Node right
*/

class Node: NSObject {
    var val: Int?
    var level: Int?
    var left: Node?
    var right: Node?
    
    init(value: Int, level: Int) {
        val = value
        self.level = level
    }
}

func levelOrderTraversal(root: Node) -> [[Int]] {
    var nodeQueue: [Node?] = [root]
    var currentLevel = 0
    root.level = 1
    
    print("[", terminator: "")
    
    while !nodeQueue.isEmpty {
        if let node = nodeQueue.remove(at: 0) {
            node.left.level = node.level + 1
            node.right.level = node.level + 1

            if node.level != currentLevel {
                currentLevel = node.level
                print("],[", terminator: "")
                print(node.value, terminator: "")
            } else {
                print(",", terminator: "")
                print(node.value, terminator: "")
            }       

            if let left = node.left {
                nodeQueue.append(left)
                if let right = node.right {
                    nodeQueue.append(right)
                }
            }
        }
    }
    
    print("]", terminator: "")
}
